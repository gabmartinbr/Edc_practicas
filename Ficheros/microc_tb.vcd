$date
	Sun Nov 17 13:28:48 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! z $end
$var wire 6 " Opcode [5:0] $end
$var reg 3 # Op [2:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$var reg 1 & s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 ( we3 $end
$var reg 1 ) wez $end
$scope module micro_procesador $end
$var wire 3 * Op [2:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 & s_inc $end
$var wire 1 ' s_inm $end
$var wire 1 ( we3 $end
$var wire 1 ) wez $end
$var wire 1 + z_flag $end
$var wire 1 ! z $end
$var wire 10 , sig_pc [9:0] $end
$var wire 8 - reg_2 [7:0] $end
$var wire 8 . reg_1 [7:0] $end
$var wire 10 / pc_siguiente [9:0] $end
$var wire 16 0 instruc [15:0] $end
$var wire 8 1 dato_a_reg [7:0] $end
$var wire 8 2 alu_output [7:0] $end
$var wire 10 3 PC [9:0] $end
$var wire 6 4 Opcode [5:0] $end
$scope module alu_module $end
$var wire 3 5 Op [2:0] $end
$var wire 8 6 B [7:0] $end
$var wire 8 7 A [7:0] $end
$var reg 8 8 S [7:0] $end
$var reg 1 ! zero $end
$upscope $end
$scope module banco_registros $end
$var wire 4 9 RA1 [3:0] $end
$var wire 4 : RA2 [3:0] $end
$var wire 4 ; WA3 [3:0] $end
$var wire 1 $ clk $end
$var wire 1 ( we3 $end
$var wire 8 < WD3 [7:0] $end
$var wire 8 = RD2 [7:0] $end
$var wire 8 > RD1 [7:0] $end
$upscope $end
$scope module flipflop_zero $end
$var wire 1 ) carga $end
$var wire 1 $ clk $end
$var wire 1 ! d $end
$var wire 1 % reset $end
$var reg 1 + q $end
$upscope $end
$scope module memoria_prog $end
$var wire 16 ? Data [15:0] $end
$var wire 1 $ clk $end
$var wire 10 @ Address [9:0] $end
$upscope $end
$scope module mux_a_banco_reg $end
$var wire 8 A D0 [7:0] $end
$var wire 8 B D1 [7:0] $end
$var wire 1 & s $end
$var wire 8 C Y [7:0] $end
$var parameter 32 D WIDTH $end
$upscope $end
$scope module mux_a_pc $end
$var wire 10 E D0 [9:0] $end
$var wire 1 & s $end
$var wire 10 F Y [9:0] $end
$var wire 10 G D1 [9:0] $end
$var parameter 32 H WIDTH $end
$upscope $end
$scope module registro_PC $end
$var wire 10 I D [9:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var parameter 32 J WIDTH $end
$var reg 10 K Q [9:0] $end
$upscope $end
$scope module sumador_pc $end
$var wire 10 L A [9:0] $end
$var wire 10 M B [9:0] $end
$var wire 10 N Y [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 J
b1010 H
b1000 D
$end
#0
$dumpvars
b1 N
b1 M
b0 L
b0 K
b101 I
b1 G
b101 F
b101 E
b0 C
b0 B
b0 A
b0 @
b100000000000101 ?
b0 >
b0 =
b0 <
b101 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b10000 4
b0 3
b0 2
b0 1
b100000000000101 0
b101 /
b0 .
b0 -
b1 ,
0+
b0 *
0)
0(
0'
0&
1%
1$
b0 #
b10000 "
1!
$end
#500
0%
#1000
0$
#2000
b10 /
b10 F
b10 I
b10 ;
b10 E
b100 "
b100 4
b110 ,
b110 G
b110 N
b1000000000010 0
b1000000000010 ?
b101 3
b101 @
b101 K
b101 L
1$
#3000
b110 /
b110 F
b110 I
0$
1(
1'
1&
#4000
b10 1
b10 <
b10 C
b111 /
b111 F
b111 I
b1 ;
b10 :
b10 B
b100001 E
b111 ,
b111 G
b111 N
b1000000100001 0
b1000000100001 ?
b110 3
b110 @
b110 K
b110 L
1$
#5000
0$
#6000
b100 1
b100 <
b100 C
b1000 /
b1000 F
b1000 I
b11 ;
b100 :
b100 B
b1000011 E
b1000 ,
b1000 G
b1000 N
b1000001000011 0
b1000001000011 ?
b111 3
b111 @
b111 K
b111 L
1$
#7000
0$
#8000
b10 -
b10 6
b10 =
b1 1
b1 <
b1 C
b1001 /
b1001 F
b1001 I
b100 ;
b1 :
b1 B
b10100 E
b1001 ,
b1001 G
b1001 N
b1000000010100 0
b1000000010100 ?
b1000 3
b1000 @
b1000 K
b1000 L
1$
#9000
0$
#10000
b100 -
b100 6
b100 =
b100011 1
b100011 <
b100011 C
b1010 /
b1010 F
b1010 I
b10 ;
b11 :
b10 9
b100011 B
b1000110010 E
b101000 "
b101000 4
b1010 ,
b1010 G
b1010 N
b1010001000110010 0
b1010001000110010 ?
b1001 3
b1001 @
b1001 K
b1001 L
1$
#11000
0!
b100 2
b100 8
b100 A
0$
1)
b10 #
b10 *
b10 5
0'
#12000
b11 2
b11 8
b11 A
b1 -
b1 6
b1 =
b10100 1
b10100 <
b10100 C
b10 .
b10 7
b10 >
b1011 /
b1011 F
b1011 I
b1 ;
b100 :
b1 9
b10100 B
b101000001 E
b101100 "
b101100 4
b1011 ,
b1011 G
b1011 N
b1011000101000001 0
b1011000101000001 ?
b1010 3
b1010 @
b1010 K
b1010 L
1$
#13000
b1 2
b1 8
b1 A
0$
b11 #
b11 *
b11 5
#14000
1!
b0 2
b0 8
b0 A
b0 -
b0 6
b0 =
b10000000 1
b10000000 <
b10000000 C
b0 .
b0 7
b0 >
b1100 /
b1100 F
b1100 I
b1001 ;
b0 :
b1000 9
b10000000 B
b1001 E
b10010 "
b10010 4
b1100 ,
b1100 G
b1100 N
b100100000001001 0
b100100000001001 ?
b1011 3
b1011 @
b1011 K
b1011 L
1$
#15000
b0 1
b0 <
b0 C
b1001 /
b1001 F
b1001 I
0$
0)
b0 #
b0 *
b0 5
0(
0&
#16000
b100011 1
b100011 <
b100011 C
0!
b100011 2
b100011 8
b100011 A
b100 -
b100 6
b100 =
b100011 .
b100011 7
b100011 >
b1000110010 /
b1000110010 F
b1000110010 I
b10 ;
b11 :
b10 9
b100011 B
b1000110010 E
b101000 "
b101000 4
b1010 ,
b1010 G
b1010 N
b1010001000110010 0
b1010001000110010 ?
b1001 3
b1001 @
b1001 K
b1001 L
1$
#17000
b100111 2
b100111 8
b100111 A
b1010 /
b1010 F
b1010 I
0$
1)
b10 #
b10 *
b10 5
1(
1&
#18000
b10101 2
b10101 8
b10101 A
b1 -
b1 6
b1 =
b10100 .
b10100 7
b10100 >
b10100 1
b10100 <
b10100 C
b1011 /
b1011 F
b1011 I
b1 ;
b100 :
b1 9
b10100 B
b101000001 E
b101100 "
b101100 4
b1011 ,
b1011 G
b1011 N
b1011000101000001 0
b1011000101000001 ?
b1010 3
b1010 @
b1010 K
b1010 L
1$
#19000
b10011 2
b10011 8
b10011 A
0$
b11 #
b11 *
b11 5
#20000
1!
b0 2
b0 8
b0 A
b0 -
b0 6
b0 =
b0 .
b0 7
b0 >
b10000000 1
b10000000 <
b10000000 C
b1100 /
b1100 F
b1100 I
b1001 ;
b0 :
b1000 9
b10000000 B
b1001 E
b10010 "
b10010 4
b1100 ,
b1100 G
b1100 N
b100100000001001 0
b100100000001001 ?
b1011 3
b1011 @
b1011 K
b1011 L
1$
#21000
0$
0)
b0 #
b0 *
b0 5
0(
#22000
b0 1
b0 <
b0 C
b1101 /
b1101 F
b1101 I
b1100 ;
b0 9
b0 B
b1100 E
b10000 "
b10000 4
b1101 ,
b1101 G
b1101 N
b100000000001100 0
b100000000001100 ?
b1100 3
b1100 @
b1100 K
b1100 L
1$
#23000
b1100 /
b1100 F
b1100 I
0$
1)
0&
#24000
1+
1$
#25000
0$
#26000
1$
#26500
